{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "1569385189359780535"
    }
  },
  "definitions": {
    "_1.EnvionmentVariableType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "nullable": true
        },
        "secureValue": {
          "type": "securestring",
          "nullable": true
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.FileShareMountType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "fileShareName": {
          "type": "string"
        },
        "storageAccountName": {
          "type": "string"
        },
        "storageAccountKey": {
          "type": "securestring"
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.GitRepoMountType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "repository": {
          "type": "string",
          "nullable": true
        },
        "privateRepository": {
          "type": "securestring",
          "nullable": true
        },
        "directory": {
          "type": "string",
          "nullable": true
        },
        "revision": {
          "type": "string",
          "nullable": true
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "_1.ServiceBusQueueSku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Premium",
        "Standard"
      ],
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "EnvionmentVariableArrayType": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/_1.EnvionmentVariableType"
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "FileShareMountArrayType": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/_1.FileShareMountType"
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "GitRepoMountArrayType": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/_1.GitRepoMountType"
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "NodeConfig": {
      "type": "object",
      "properties": {
        "cpuCount": {
          "type": "int",
          "nullable": true
        },
        "memInGB": {
          "type": "int",
          "nullable": true
        },
        "image": {
          "type": "string",
          "nullable": true
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "ServiceBusQueueOptions": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/_1.ServiceBusQueueSku",
          "nullable": true
        },
        "skuCapacity": {
          "type": "int",
          "nullable": true
        },
        "sizeInMB": {
          "type": "int",
          "nullable": true
        },
        "lockDuration": {
          "type": "string",
          "nullable": true
        },
        "requestQueue": {
          "type": "string",
          "nullable": true
        },
        "responseQueue": {
          "type": "string",
          "nullable": true
        }
      },
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    },
    "ServiceType": {
      "type": "string",
      "allowedValues": [
        "cgi",
        "echo",
        "grpc"
      ],
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "southeastasia"
    },
    "nodeConfig": {
      "$ref": "#/definitions/NodeConfig",
      "nullable": true
    },
    "nodeCount": {
      "type": "int",
      "nullable": true
    },
    "service": {
      "$ref": "#/definitions/ServiceType",
      "defaultValue": "echo"
    },
    "environmentVariables": {
      "$ref": "#/definitions/EnvionmentVariableArrayType",
      "defaultValue": []
    },
    "gitRepos": {
      "$ref": "#/definitions/GitRepoMountArrayType",
      "defaultValue": []
    },
    "fileShares": {
      "$ref": "#/definitions/FileShareMountArrayType",
      "defaultValue": []
    },
    "messagingRgName": {
      "type": "string"
    },
    "computingRgName": {
      "type": "string"
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('appinsights-{0}', uniqueString(parameters('messagingRgName')))]"
    },
    "serviceBusName": {
      "type": "string",
      "defaultValue": "[format('servicebus-{0}', uniqueString(parameters('messagingRgName')))]"
    },
    "serviceBusQueueOptions": {
      "$ref": "#/definitions/ServiceBusQueueOptions",
      "nullable": true
    }
  },
  "variables": {
    "_serviceBusQueueOptions": "[union(variables('ServiceBusQueueOptionsDefault'), coalesce(parameters('serviceBusQueueOptions'), createObject()))]",
    "queueOptions": {
      "queueType": "servicebus",
      "requestQueue": "[variables('_serviceBusQueueOptions').requestQueue]",
      "responseQueue": "[variables('_serviceBusQueueOptions').responseQueue]"
    },
    "_1.QueueOptionsDefault": {
      "queueType": "servicebus",
      "requestQueue": "requests",
      "responseQueue": "responses",
      "messageLease": 60,
      "queryInterval": 500
    },
    "ServiceBusQueueOptionsDefault": {
      "sku": "Standard",
      "skuCapacity": null,
      "sizeInMB": 2048,
      "lockDuration": "PT1M",
      "requestQueue": "[variables('_1.QueueOptionsDefault').requestQueue]",
      "responseQueue": "[variables('_1.QueueOptionsDefault').responseQueue]"
    }
  },
  "resources": {
    "messagingRg": {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[parameters('messagingRgName')]",
      "location": "[parameters('location')]",
      "tags": {
        "QueueType": "[variables('queueOptions').queueType]",
        "RequestQueueName": "[variables('queueOptions').requestQueue]",
        "ResponseQueueName": "[variables('queueOptions').responseQueue]"
      }
    },
    "computingRg": {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[parameters('computingRgName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Service": "[parameters('service')]"
      }
    },
    "servicebus": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "servicebus-deployment",
      "resourceGroup": "[parameters('messagingRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('serviceBusName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "options": {
            "value": "[variables('_serviceBusQueueOptions')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "1958284932664324668"
            }
          },
          "definitions": {
            "_1.ServiceBusQueueSku": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "Premium",
                "Standard"
              ],
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "ServiceBusQueueOptions": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/definitions/_1.ServiceBusQueueSku",
                  "nullable": true
                },
                "skuCapacity": {
                  "type": "int",
                  "nullable": true
                },
                "sizeInMB": {
                  "type": "int",
                  "nullable": true
                },
                "lockDuration": {
                  "type": "string",
                  "nullable": true
                },
                "requestQueue": {
                  "type": "string",
                  "nullable": true
                },
                "responseQueue": {
                  "type": "string",
                  "nullable": true
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "options": {
              "$ref": "#/definitions/ServiceBusQueueOptions",
              "nullable": true
            }
          },
          "variables": {
            "_options": "[union(variables('ServiceBusQueueOptionsDefault'), coalesce(parameters('options'), createObject()))]",
            "queueNames": [
              "[variables('_options').requestQueue]",
              "[variables('_options').responseQueue]"
            ],
            "_1.QueueOptionsDefault": {
              "queueType": "servicebus",
              "requestQueue": "requests",
              "responseQueue": "responses",
              "messageLease": 60,
              "queryInterval": 500
            },
            "ServiceBusQueueOptionsDefault": {
              "sku": "Standard",
              "skuCapacity": null,
              "sizeInMB": 2048,
              "lockDuration": "PT1M",
              "requestQueue": "[variables('_1.QueueOptionsDefault').requestQueue]",
              "responseQueue": "[variables('_1.QueueOptionsDefault').responseQueue]"
            }
          },
          "resources": {
            "servicebus::queues": {
              "copy": {
                "name": "queues",
                "count": "[length(variables('queueNames'))]"
              },
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2022-10-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), variables('queueNames')[copyIndex()])]",
              "properties": {
                "lockDuration": "[variables('_options').lockDuration]",
                "maxSizeInMegabytes": "[variables('_options').sizeInMB]"
              },
              "dependsOn": [
                "servicebus"
              ]
            },
            "servicebus": {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2022-10-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[variables('_options').sku]",
                "capacity": "[variables('_options').skuCapacity]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "messagingRg"
      ]
    },
    "monitor": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitor-deployment",
      "resourceGroup": "[parameters('messagingRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('appInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "16493246762927877290"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "logSpaceName": "[format('{0}-logspace', parameters('name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[variables('logSpaceName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "IngestionMode": "LogAnalytics",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logSpaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logSpaceName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "messagingRg"
      ]
    },
    "cluster": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cluster-deployment",
      "resourceGroup": "[parameters('computingRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "nodeConfig": {
            "value": "[parameters('nodeConfig')]"
          },
          "count": {
            "value": "[parameters('nodeCount')]"
          },
          "service": {
            "value": "[parameters('service')]"
          },
          "environmentVariables": {
            "value": "[parameters('environmentVariables')]"
          },
          "gitRepos": {
            "value": "[parameters('gitRepos')]"
          },
          "fileShares": {
            "value": "[parameters('fileShares')]"
          },
          "queueOptions": {
            "value": "[variables('queueOptions')]"
          },
          "serviceBusName": {
            "value": "[parameters('serviceBusName')]"
          },
          "serviceBusRg": {
            "value": "[parameters('messagingRgName')]"
          },
          "appInsightsName": {
            "value": "[parameters('appInsightsName')]"
          },
          "appInsightsRg": {
            "value": "[parameters('messagingRgName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "9582114359458205782"
            }
          },
          "definitions": {
            "_1.EnvionmentVariableType": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string",
                  "nullable": true
                },
                "secureValue": {
                  "type": "securestring",
                  "nullable": true
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_1.FileShareMountType": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "mountPath": {
                  "type": "string"
                },
                "fileShareName": {
                  "type": "string"
                },
                "storageAccountName": {
                  "type": "string"
                },
                "storageAccountKey": {
                  "type": "securestring"
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_1.GitRepoMountType": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "mountPath": {
                  "type": "string"
                },
                "repository": {
                  "type": "string",
                  "nullable": true
                },
                "privateRepository": {
                  "type": "securestring",
                  "nullable": true
                },
                "directory": {
                  "type": "string",
                  "nullable": true
                },
                "revision": {
                  "type": "string",
                  "nullable": true
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_1.QueueType": {
              "type": "string",
              "allowedValues": [
                "servicebus",
                "storage"
              ],
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "EnvionmentVariableArrayType": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_1.EnvionmentVariableType"
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "FileShareMountArrayType": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_1.FileShareMountType"
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "GitRepoMountArrayType": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_1.GitRepoMountType"
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "NodeConfig": {
              "type": "object",
              "properties": {
                "cpuCount": {
                  "type": "int",
                  "nullable": true
                },
                "memInGB": {
                  "type": "int",
                  "nullable": true
                },
                "image": {
                  "type": "string",
                  "nullable": true
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "QueueOptionsType": {
              "type": "object",
              "properties": {
                "connectionString": {
                  "type": "securestring",
                  "nullable": true
                },
                "queueType": {
                  "$ref": "#/definitions/_1.QueueType",
                  "nullable": true
                },
                "requestQueue": {
                  "type": "string",
                  "nullable": true
                },
                "responseQueue": {
                  "type": "string",
                  "nullable": true
                },
                "messageLease": {
                  "type": "int",
                  "nullable": true
                },
                "queryInterval": {
                  "type": "int",
                  "nullable": true
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "ServiceType": {
              "type": "string",
              "allowedValues": [
                "cgi",
                "echo",
                "grpc"
              ],
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            }
          },
          "parameters": {
            "nodeConfig": {
              "$ref": "#/definitions/NodeConfig",
              "nullable": true
            },
            "count": {
              "type": "int",
              "defaultValue": 10
            },
            "offset": {
              "type": "int",
              "defaultValue": 0
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "concurrency": {
              "type": "int",
              "defaultValue": 100
            },
            "service": {
              "$ref": "#/definitions/ServiceType",
              "defaultValue": "echo"
            },
            "environmentVariables": {
              "$ref": "#/definitions/EnvionmentVariableArrayType",
              "defaultValue": []
            },
            "serviceBusName": {
              "type": "string"
            },
            "serviceBusRg": {
              "type": "string"
            },
            "queueOptions": {
              "$ref": "#/definitions/QueueOptionsType",
              "nullable": true
            },
            "appInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "appInsightsRg": {
              "type": "string",
              "defaultValue": ""
            },
            "gitRepos": {
              "$ref": "#/definitions/GitRepoMountArrayType",
              "defaultValue": []
            },
            "fileShares": {
              "$ref": "#/definitions/FileShareMountArrayType",
              "defaultValue": []
            }
          },
          "variables": {
            "serviceBusEndpoint": "[format('{0}/AuthorizationRules/RootManageSharedAccessKey', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('serviceBusRg')), 'Microsoft.ServiceBus/namespaces', parameters('serviceBusName')))]",
            "useMonitor": "[and(not(empty(parameters('appInsightsName'))), not(empty(parameters('appInsightsRg'))))]"
          },
          "resources": {
            "serviceBus": {
              "existing": true,
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2022-10-01-preview",
              "resourceGroup": "[parameters('serviceBusRg')]",
              "name": "[parameters('serviceBusName')]"
            },
            "monitor": {
              "condition": "[variables('useMonitor')]",
              "existing": true,
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "resourceGroup": "[parameters('appInsightsRg')]",
              "name": "[parameters('appInsightsName')]"
            },
            "aci": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "aci-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "nodeConfig": {
                    "value": "[parameters('nodeConfig')]"
                  },
                  "count": {
                    "value": "[parameters('count')]"
                  },
                  "offset": {
                    "value": "[parameters('offset')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "queueOptions": {
                    "value": "[union(coalesce(parameters('queueOptions'), createObject()), createObject('connectionString', listKeys(variables('serviceBusEndpoint'), '2022-10-01-preview').primaryConnectionString))]"
                  },
                  "appInsights": "[if(variables('useMonitor'), createObject('value', reference('monitor').ConnectionString), createObject('value', ''))]",
                  "concurrency": {
                    "value": "[parameters('concurrency')]"
                  },
                  "service": {
                    "value": "[parameters('service')]"
                  },
                  "environmentVariables": {
                    "value": "[parameters('environmentVariables')]"
                  },
                  "gitRepos": {
                    "value": "[parameters('gitRepos')]"
                  },
                  "fileShares": {
                    "value": "[parameters('fileShares')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.27.1.19265",
                      "templateHash": "7502021524236536312"
                    }
                  },
                  "definitions": {
                    "_1.EnvionmentVariableType": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "nullable": true
                        },
                        "secureValue": {
                          "type": "securestring",
                          "nullable": true
                        }
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "_1.FileShareMountType": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mountPath": {
                          "type": "string"
                        },
                        "fileShareName": {
                          "type": "string"
                        },
                        "storageAccountName": {
                          "type": "string"
                        },
                        "storageAccountKey": {
                          "type": "securestring"
                        }
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "_1.GitRepoMountType": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mountPath": {
                          "type": "string"
                        },
                        "repository": {
                          "type": "string",
                          "nullable": true
                        },
                        "privateRepository": {
                          "type": "securestring",
                          "nullable": true
                        },
                        "directory": {
                          "type": "string",
                          "nullable": true
                        },
                        "revision": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "_1.QueueType": {
                      "type": "string",
                      "allowedValues": [
                        "servicebus",
                        "storage"
                      ],
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "EnvionmentVariableArrayType": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/_1.EnvionmentVariableType"
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "FileShareMountArrayType": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/_1.FileShareMountType"
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "GitRepoMountArrayType": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/_1.GitRepoMountType"
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "NodeConfig": {
                      "type": "object",
                      "properties": {
                        "cpuCount": {
                          "type": "int",
                          "nullable": true
                        },
                        "memInGB": {
                          "type": "int",
                          "nullable": true
                        },
                        "image": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "QueueOptionsType": {
                      "type": "object",
                      "properties": {
                        "connectionString": {
                          "type": "securestring",
                          "nullable": true
                        },
                        "queueType": {
                          "$ref": "#/definitions/_1.QueueType",
                          "nullable": true
                        },
                        "requestQueue": {
                          "type": "string",
                          "nullable": true
                        },
                        "responseQueue": {
                          "type": "string",
                          "nullable": true
                        },
                        "messageLease": {
                          "type": "int",
                          "nullable": true
                        },
                        "queryInterval": {
                          "type": "int",
                          "nullable": true
                        }
                      },
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    },
                    "ServiceType": {
                      "type": "string",
                      "allowedValues": [
                        "cgi",
                        "echo",
                        "grpc"
                      ],
                      "metadata": {
                        "__bicep_imported_from!": {
                          "sourceTemplate": "types.bicep"
                        }
                      }
                    }
                  },
                  "parameters": {
                    "prefix": {
                      "type": "string",
                      "defaultValue": "servicehost"
                    },
                    "count": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "offset": {
                      "type": "int",
                      "defaultValue": 0
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "southeastasia"
                    },
                    "nodeConfig": {
                      "$ref": "#/definitions/NodeConfig",
                      "nullable": true
                    },
                    "queueOptions": {
                      "$ref": "#/definitions/QueueOptionsType"
                    },
                    "appInsights": {
                      "type": "securestring",
                      "defaultValue": ""
                    },
                    "concurrency": {
                      "type": "int",
                      "defaultValue": 20
                    },
                    "service": {
                      "$ref": "#/definitions/ServiceType",
                      "defaultValue": "echo"
                    },
                    "environmentVariables": {
                      "$ref": "#/definitions/EnvionmentVariableArrayType",
                      "defaultValue": []
                    },
                    "gitRepos": {
                      "$ref": "#/definitions/GitRepoMountArrayType",
                      "defaultValue": []
                    },
                    "fileShares": {
                      "$ref": "#/definitions/FileShareMountArrayType",
                      "defaultValue": []
                    }
                  },
                  "variables": {
                    "_nodeConfig": "[union(variables('NodeConfigDefault'), coalesce(parameters('nodeConfig'), createObject()))]",
                    "_queueOptions": "[union(variables('QueueOptionsDefault'), parameters('queueOptions'))]",
                    "serviceMap": {
                      "cgi": "/services/cgi/CloudWorker.Services.CGI.dll",
                      "echo": "/services/echo/CloudWorker.Services.Echo.dll",
                      "grpc": "/services/grpc/CloudWorker.Services.GRpc.dll"
                    },
                    "assemblyPath": "[variables('serviceMap')[parameters('service')]]",
                    "coreEnvVars": [
                      {
                        "name": "Queues__QueueType",
                        "value": "[variables('_queueOptions').queueType]"
                      },
                      {
                        "name": "Queues__ConnectionString",
                        "secureValue": "[variables('_queueOptions').connectionString]"
                      },
                      {
                        "name": "Queues__Request__QueueName",
                        "value": "[variables('_queueOptions').requestQueue]"
                      },
                      {
                        "name": "Queues__Response__QueueName",
                        "value": "[variables('_queueOptions').responseQueue]"
                      },
                      {
                        "name": "Queues__MessageLease",
                        "value": "[variables('_queueOptions').messageLease]"
                      },
                      {
                        "name": "Queues__QueryInterval",
                        "value": "[variables('_queueOptions').queryInterval]"
                      },
                      {
                        "name": "ApplicationInsights__ConnectionString",
                        "value": "[parameters('appInsights')]"
                      },
                      {
                        "name": "Worker__Concurrency",
                        "value": "[parameters('concurrency')]"
                      },
                      {
                        "name": "Service__AssemblyPath",
                        "value": "[variables('assemblyPath')]"
                      }
                    ],
                    "coreEnvVarsAsObj": "[toObject(variables('coreEnvVars'), lambda('e', lambdaVariables('e').name))]",
                    "environmentVariablesAsObj": "[toObject(parameters('environmentVariables'), lambda('e', lambdaVariables('e').name))]",
                    "envVarsAsObj": "[union(variables('coreEnvVarsAsObj'), variables('environmentVariablesAsObj'))]",
                    "envVars": "[map(items(variables('envVarsAsObj')), lambda('item', lambdaVariables('item').value))]",
                    "gitRepoMounts": "[map(parameters('gitRepos'), lambda('e', createObject('name', lambdaVariables('e').name, 'mountPath', lambdaVariables('e').mountPath)))]",
                    "gitRepoVolumes": "[map(parameters('gitRepos'), lambda('e', createObject('name', lambdaVariables('e').name, 'gitRepo', createObject('repository', coalesce(tryGet(lambdaVariables('e'), 'privateRepository'), lambdaVariables('e').repository), 'directory', tryGet(lambdaVariables('e'), 'directory'), 'revision', tryGet(lambdaVariables('e'), 'revision')))))]",
                    "fileShareMounts": "[map(parameters('fileShares'), lambda('e', createObject('name', lambdaVariables('e').name, 'mountPath', lambdaVariables('e').mountPath)))]",
                    "fileShareVolumes": "[map(parameters('fileShares'), lambda('e', createObject('name', lambdaVariables('e').name, 'azureFile', createObject('shareName', lambdaVariables('e').fileShareName, 'storageAccountName', lambdaVariables('e').storageAccountName, 'storageAccountKey', lambdaVariables('e').storageAccountKey))))]",
                    "volumeMounts": "[concat(variables('gitRepoMounts'), variables('fileShareMounts'))]",
                    "volumes": "[concat(variables('gitRepoVolumes'), variables('fileShareVolumes'))]",
                    "NodeConfigDefault": {
                      "cpuCount": 1,
                      "memInGB": 1,
                      "image": "leizacrdev.azurecr.io/soa/servicehost:1.5-ubuntu22"
                    },
                    "QueueOptionsDefault": {
                      "queueType": "servicebus",
                      "requestQueue": "requests",
                      "responseQueue": "responses",
                      "messageLease": 60,
                      "queryInterval": 500
                    }
                  },
                  "resources": {
                    "containers": {
                      "copy": {
                        "name": "containers",
                        "count": "[length(range(0, parameters('count')))]"
                      },
                      "type": "Microsoft.ContainerInstance/containerGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}{1}', parameters('prefix'), add(range(0, parameters('count'))[copyIndex()], parameters('offset')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": "Standard",
                        "containers": [
                          {
                            "name": "servicehost",
                            "properties": {
                              "image": "[variables('_nodeConfig').image]",
                              "environmentVariables": "[variables('envVars')]",
                              "resources": {
                                "requests": {
                                  "cpu": "[variables('_nodeConfig').cpuCount]",
                                  "memoryInGB": "[variables('_nodeConfig').memInGB]"
                                }
                              },
                              "volumeMounts": "[variables('volumeMounts')]"
                            }
                          }
                        ],
                        "initContainers": [],
                        "restartPolicy": "Always",
                        "osType": "Linux",
                        "volumes": "[variables('volumes')]"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "monitor",
                "serviceBus"
              ]
            }
          }
        }
      },
      "dependsOn": [
        "computingRg",
        "monitor",
        "servicebus"
      ]
    }
  }
}